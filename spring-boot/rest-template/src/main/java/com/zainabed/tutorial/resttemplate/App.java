/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.zainabed.tutorial.resttemplate;

import org.springframework.core.ParameterizedTypeReference;
import org.springframework.http.HttpEntity;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpMethod;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.client.RestTemplate;

import java.util.Arrays;
import java.util.List;

public class App {

    public static void main(String[] args) {
        // Instantiate RestTemplate
        RestTemplate restTemplate = new RestTemplate();
        String apiEndpoint = "http://localhost:3000/projects";

        // HTTP GET single record
        ResponseEntity<ProjectModel> entity = restTemplate.getForEntity(apiEndpoint + "/1", ProjectModel.class);
        ProjectModel record = entity.getBody();
        System.out.println("Fetch single records");
        System.out.println(record);

        // HTTP GET all records
        System.out.println("Fetch all records");
        ResponseEntity<List> records = restTemplate.getForEntity(apiEndpoint, List.class);
        records.getBody().forEach(System.out::println);

        // HTTP GET all with casting of entity
        ParameterizedTypeReference<List<ProjectModel>> typeReference = new ParameterizedTypeReference<List<ProjectModel>>() {
        };
        ResponseEntity<List<ProjectModel>> responseEntity = restTemplate.exchange(apiEndpoint, HttpMethod.GET, null, typeReference);
        List<ProjectModel> projectModels = responseEntity.getBody();
        projectModels.forEach(System.out::println);


        //HTTP POST Request
        ProjectModel projectModel = new ProjectModel();
        projectModel.setName("Blogger App");
        projectModel.setDescription("Blog application to publish blogpost");

        ResponseEntity<ProjectModel> response = restTemplate.postForEntity(apiEndpoint, projectModel, ProjectModel.class);
        System.out.println(response.getBody());


        //HTTP PUT request
        projectModel = response.getBody();
        projectModel.setName("Blog post app");
        HttpHeaders httpHeaders = new HttpHeaders();
        httpHeaders.setContentType(MediaType.APPLICATION_JSON);
        httpHeaders.setAccept(Arrays.asList(MediaType.APPLICATION_JSON));
        HttpEntity<ProjectModel> requestEntity = new HttpEntity<ProjectModel>(projectModel, httpHeaders);
        response = restTemplate.exchange(apiEndpoint + "/" + projectModel.getId(), HttpMethod.PUT, requestEntity, ProjectModel.class);

        System.out.println("PUT response");
        System.out.println(response.getBody());


        // HTTP Delete request
        restTemplate.delete(apiEndpoint + "/" + projectModel.getId());
        //response = restTemplate.exchange(apiEndpoint + "/" + projectModel.getId(), HttpMethod.DELETE, requestEntity, ProjectModel.class);

        System.out.println("DELETE response");
        System.out.println(response.getBody());
    }
}
